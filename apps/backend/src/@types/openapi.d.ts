/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    '/some/{someId}': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a some
         * @description Get a some
         */
        get: operations['getSome'];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Some: {
            id: string;
        };
        Error: {
            /**
             * Format: int32
             * @description The HTTP status code
             */
            code: number;
            /** @description The error */
            message: string;
        };
        /** @description An HTTP Problem Details object, as defined in IETF RFC 7807 (https://tools.ietf.org/html/rfc7807). */
        Problem: {
            /** @description The details of the problem */
            detail?: string;
            /** @description The HTTP status code */
            status: number;
            /** @description The type of error (text) */
            title: string;
            /** @description The type of error (URL) */
            type?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getSome: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The Id of the some */
                someId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['Some'];
                };
            };
            /** @description The request has failed. */
            default: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['Error'];
                    'application/problem+json': components['schemas']['Problem'];
                };
            };
        };
    };
}
